version: '3.7'

services:
  hadoop-master:
    hostname: hadoop-master
    build:
      context: hadoop
    image: hadoop
    container_name: hadoop-master
    depends_on:
      - database
      - hadoop-datanode
    environment:
      - nodeType=nameNone
    volumes:
      - /mnt/data/docker/hadoop-namenode:/opt/hadoop/data/nameNode
    ports:
      - "9870:9870"   # hadoop
      - "8088:8088"   # hadoop cluster
      - "9000:9000"   # hdfs
      - "10000:10000" # hive server2
      - "14000:14000" # webhdfs
    restart: always
    networks:
        - cluster

  hadoop-datanode:
    hostname: hadoop-datanode
    image: hadoop
    deploy:
      mode: replicated
      replicas: 2
    container_name: hadoop-datanode
    environment:
      - nodeType=dataNone
    ports:
      - "8001:8042"
    volumes:
      - /mnt/data/docker/hadoop-datanode:/opt/hadoop/data/dataNode
    restart: always
    networks:
      - cluster

  database:
    image: mysql:8.0.17
    deploy:
      mode: replicated
      replicas: 1
    container_name: database
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost","-u","root","-psecret"]
      interval: 30s
      timeout: 1s
      retries: 20
    ports:
        - "13306:3306"
    volumes:
        - /mnt/data/docker/hadoop-mysql:/var/lib/mysql
    environment:
        MYSQL_ROOT_USER: root
        MYSQL_ROOT_PASSWORD: secret
        MYSQL_DATABASE: hue
        MYSQL_USER: user
        MYSQL_PASSWORD: secret
    restart: always
    networks:
      - cluster

  hue:
    image: gethue/hue:latest
    deploy:
      mode: replicated
      replicas: 1
    container_name: hue
    dns: 8.8.8.8
    command: /bin/bash startup.sh
    depends_on:
      - database
    ports:
      - "8888:8888"
    volumes:
      - ./hue/z-hue.ini:/usr/share/hue/desktop/conf/z-hue.ini
      - ./hue/startup.sh:/usr/share/hue/startup.sh
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: hue
      DB_USER: user
      DB_PASSWORD: secret
    restart: always
    networks:
      - cluster

  spark-master:
    hostname: spark-master
    build:
      context: spark
    image: spark
    container_name: spark-master
    restart: always
    environment:
      - nodeType=master
    ports:
      - "4040:4040"
      - "4080:8080"
    networks:
      - cluster

  spark-slave:
    build:
      context: spark
    image: spark
    deploy:
      mode: replicated
      replicas: 2
    container_name: spark-slave
    restart: always
    environment:
      - nodeType=slave
    networks:
        - cluster

networks:
  cluster:
